pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'beendoo/want-piece'  // Docker 이미지 이름
        KUBECONFIG_CREDENTIALS_ID = 'kubeconfig-credentials'  // Kubeconfig 자격증명 ID
    }

    stages {
        stage('Checkout') {
            steps {
                // Git 리포지토리에서 소스 코드 가져오기
                checkout scm
            }
        }

        stage('Check Directory Structure') {
            steps {
                sh 'ls -R'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Docker 이미지 빌드
                    sh 'docker build -t ${DOCKER_IMAGE}:latest ./WEB'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Docker Hub 로그인 및 푸시
                    withCredentials([usernamePassword(credentialsId: 'mokolee-jenkins-docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                    }
                    sh 'docker push ${DOCKER_IMAGE}:latest'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Kubernetes 클러스터에 배포
                    withKubeConfig([credentialsId: KUBECONFIG_CREDENTIALS_ID]) {
                        sh 'kubectl set image deployment/mokoolee-web-deployment web-container=${DOCKER_IMAGE}:latest --record'
                        sh 'kubectl rollout status deployment/mokoolee-web-deployment'
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Deployment process finished!'
        }
    }
}
