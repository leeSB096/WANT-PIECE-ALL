pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'beendoo/want-piece'  // Docker 이미지 이름
        KUBECONFIG = "/var/lib/jenkins/.kube/config"  // Kubeconfig 파일 경로 (수정된 부분)
        //KUBECONFIG_CREDENTIALS_ID = 'mokolee-jenkins-kubeconfig-credentials'  // Kubeconfig 자격증명 ID
    }

    stages {
        stage('Checkout') {
            steps {
                // Git 리포지토리에서 소스 코드 가져오기
                checkout scm
            }
        }

        stage('Check Directory Structure') {
            steps {
                sh 'pwd'
                sh 'ls -R'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // 현재 Jenkins 작업 디렉터리 절대 경로 확인
                    def workspace = pwd()
                    echo "Current workspace is: ${workspace}"
                    
                    // 절대 경로로 Docker 이미지 빌드
                    sh "docker build -t ${DOCKER_IMAGE}:latest ${workspace}/WEB"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Docker Hub 로그인 및 푸시
                    withCredentials([usernamePassword(credentialsId: 'mokolee-jenkins-docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                    }
                    // Docker 이미지 푸시
                    sh "docker push ${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('Deploy to Kubernetes - Set Image') {
            steps {
                script {
                    // Kubernetes 배포 이미지 업데이트 (새로 추가된 스테이지)
                    sh "kubectl --kubeconfig=${KUBECONFIG} set image deployment/mokolee-web-deployment web-container=${DOCKER_IMAGE}:latest --record"
                    sh "kubectl --kubeconfig=${KUBECONFIG} rollout status deployment/mokolee-web-deployment"
                }
            }
        }

        stage('Deploy to Kubernetes - Apply Deployment YAML') {
            steps {
                script {
                    // Kubernetes 클러스터에 배포 YAML 파일을 적용 (기존에 있던 스테이지에서 복사하여 새로 추가한 부분)
                    sh 'kubectl --kubeconfig=${KUBECONFIG} apply -f kubernetes/mokolee-web-deployment.yaml'
                }
            }
        }
    }

    post {
        always {
            echo 'Deployment process finished!'
        }
    }
}
